load("@aspect_rules_lint//format:defs.bzl", "multi_formatter_binary")
load("@bazel_skylib//:bzl_library.bzl", "bzl_library")
load("//lib:utils.bzl", "is_bazel_6_or_greater")
load("//lib:write_source_files.bzl", "write_source_files")

exports_files([
    "create_release.sh",
    "create_version.sh",
])

alias(
    name = "shfmt",
    actual = select({
        "@bazel_tools//src/conditions:darwin_arm64": "@shfmt_darwin_aarch64//file:shfmt",
        "@bazel_tools//src/conditions:darwin_x86_64": "@shfmt_darwin_x86_64//file:shfmt",
        "@bazel_tools//src/conditions:linux_aarch64": "@shfmt_linux_aarch64//file:shfmt",
        "@bazel_tools//src/conditions:linux_x86_64": "@shfmt_linux_x86_64//file:shfmt",
    }),
    visibility = ["//:__subpackages__"],
)

alias(
    name = "terraform",
    actual = select({
        "@bazel_tools//src/conditions:darwin_arm64": "@terraform_macos_aarch64//:terraform",
        "@bazel_tools//src/conditions:darwin_x86_64": "@terraform_macos_x86_64//:terraform",
        "@bazel_tools//src/conditions:linux": "@terraform_linux_x86_64//:terraform",
    }),
    visibility = ["//:__subpackages__"],
)

multi_formatter_binary(
    name = "format",
    go = "@go_sdk//:bin/gofmt",
    sh = ":shfmt",
    starlark = "@buildifier_prebuilt//:buildifier",
    terraform = ":terraform",
    visibility = ["//:__subpackages__"],
)

write_source_files(
    name = "releases_versions_check_in",
    files = {
        "integrity.bzl": "//tools/release:release_versions",
    },
    tags = (["manual"] if not is_bazel_6_or_greater() else []),
)

bzl_library(
    name = "integrity",
    srcs = ["integrity.bzl"],
    visibility = ["//visibility:public"],
)

bzl_library(
    name = "version",
    srcs = ["version.bzl"],
    visibility = ["//visibility:public"],
)
